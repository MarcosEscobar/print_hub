<%= form_for(@order) do |f| %>
  <%= show_error_messages(@order) %>

  <div class="field">
    <%= f.label :scheduled_at %>
    <%= calendar_text_field f, :scheduled_at, true %>
  </div>
  
  <section class="nested_items">
    <h2><%= t 'view.orders.order_lines' %></h2>
    
    <div id="order_lines_headers" class="headers">
      <h3><%= OrderLine.human_attribute_name :document_id %></h3>
      <h3><%= OrderLine.human_attribute_name :copies %></h3>
      <h3><%= Document.human_attribute_name :pages %></h3>
      <h3><%= OrderLine.human_attribute_name :price_per_copy %></h3>
      <h3><%= OrderLine.human_attribute_name :two_sided %></h3>
      <br class="break" />
    </div>
    
    <div id="order_lines" class="items">
      <%= f.fields_for :order_lines do |ol_f| %>
        <%= render 'order_line', f: ol_f, disabled: !@order.new_record? %>
      <% end %>
    </div>
  </section>

  <%= render 'total', order: @order %>
  
  <div class="actions">
    <%= f.hidden_field :lock_version %>
    <%= f.submit %>
  </div>
<% end %>
<script type="text/javascript">
  function updateTotalPrice() {
    var totalPrice = 0.0;
    
    $('.order_line').each(function(i, e) {
      var olPrice = $(e).data('excludeFromTotal')
        ? 0 : (parseFloat($(e).data('price')) || 0);

      totalPrice += olPrice;
    });
    
    var money = $('#total span.money');
    
    money.html(money.html().replace(/(\d+.)+\d+/, totalPrice.toFixed(3)));
  }
  
  function updateOrderLinePrice(orderLine) {
    var copies = parseInt(orderLine.find('input[name$="[copies]"]').val());
    var pricePerCopy = parseFloat(
      orderLine.find('input[name$="[price_per_copy]"]').val()
    );
    var pricePerOneSidedCopy = parseFloat(
      orderLine.find('input[name$="[two_sided]"].price_modifier').data('pricePerOneSided')
    );
    var pages = parseInt(orderLine.find('input[name$="[pages]"]').val());
    var evenRange = pages - (pages % 2);
    var rest = (pages % 2) * pricePerOneSidedCopy;
    var olPrice = (copies * (pricePerCopy * evenRange + rest)) || 0;
    var money = orderLine.find('span.money');

    orderLine.data('price', olPrice.toFixed(3));
    money.html(money.html().replace(/(\d+.)+\d+/, olPrice.toFixed(3)));

    updateTotalPrice();
  }
  
  jQuery(function() {
    $('a.details_link').live('ajax:success', function(event, data) {
      Helper.show($(this).parents('.order_line').find('.dynamic_details').hide().html(data));
    });
    
    $('.order_line').live('item:removed', function() {
      $(this).data('excludeFromTotal', true);

      updateTotalPrice();
    });
    
    Jobs.listenRangeChanges('.order_line');
    Jobs.listenTwoSidedChanges('.order_line');
    
    $('.price_modifier').live('change keyup', function() {
      var element = $(this);

      updateOrderLinePrice(element.parents('.order_line'));
    });
  });
</script>